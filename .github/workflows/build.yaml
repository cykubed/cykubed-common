#
name: Create and publish a Docker image
permissions:
  contents: read
  packages: write

on:
  workflow_call:

# Defines two custom environment variables for the workflow. These are used for the Container registry domain, and a name for the Docker image that this workflow builds.
env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.11"]
        poetry-version: ["1.3.1"]
    steps:
      - uses: actions/checkout@v3
        with:
          submodules: true
      - name: Install redis
        run: sudo apt-get install -y redis-tools redis-server
      - name: Verify that redis is up
        run: redis-cli ping
      - uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}
      - name: Run image
        uses: Gr1N/setup-poetry@v8
        with:
          poetry-version: ${{ matrix.poetry-version }}
      - name: Install deps
        run: |
          poetry install --with=dev
      - name: Test with pytest
        env:
          PYTHONPATH: "src:."
        run: |
          poetry run pytest --github-report
      - name: Notify slack fail
        if: failure()
        id: slack
        uses: slackapi/slack-github-action@v1.23.0
        with:
          channel-id: 'builds'
          payload: |
            {
                "blocks": [
                    {
                        "type": "section",
                        "text": {
                            "type": "mrkdwn",
                            "text": ":boom: <${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}|*${{github.repository}} test failed*>"
                        }
                    }
                ]
            }
        env:
          SLACK_BOT_TOKEN: ${{ secrets.SLACK }}

  build-and-push-image:
    runs-on: ubuntu-latest
    needs: test
    if: github.ref == 'refs/heads/master'
    # Sets the permissions granted to the `GITHUB_TOKEN` for the actions in this job.
    permissions:
      contents: read
      packages: write
      attestations: write
      id-token: write
      #
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          submodules: true
      # Uses the `docker/login-action` action to log in to the Container registry registry using the account and password that will publish the packages. Once published, the packages are scoped to the account defined here.
      - name: Log in to the Container registry
        uses: docker/login-action@65b78e6e13532edd9afa3aa52ac7964289d1a9c1
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      # This step uses the `docker/build-push-action` action to build the image, based on your repository's `Dockerfile`
      - name: Build and push Docker image
        id: push
        uses: docker/build-push-action@f2a1d5e99d037542a71f64918e516c093c6f3fc4
        with:
          context: .
          push: true
          tags: "ghcr.io/${{env.IMAGE_NAME}}:1.1"
